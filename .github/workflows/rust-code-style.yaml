name: rust-code-style

# cancel previous runs if the branch is updated.
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review, review_requested]
    paths:
      - '**.rs'
      - '**/Cargo.toml'
      - '**/Cargo.lock'
      - '**/.rustfmt.toml'
      - '**/rustfmt.toml'
      - '.github/workflows/rust-code-style.yml'

jobs:
  codes-style:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    depends-on: format
    steps:
      - uses: actions/checkout@v3
        name: Checkout
        with:
          ref: ${{ github.head_ref }}

      - uses: actions-rs/toolchain@v1
        name: Install Rust toolchain
        with:
          toolchain: stable
          override: true
          components: clippy, rustfmt

      - uses: actions/cache@v2
        name: Get build cache
        with:
          path: '**/target'
          key: ${{ runner.os }}-rust-build-cache-${{ github.head_ref }}
          restore-keys: |
            ${{ runner.os }}-rust-build-cache-main
            ${{ runner.os }}-cargo-build-main

      - uses: actions-rs/toolchain@v1
        name: Install Rust toolchain
        with:
          toolchain: stable
          override: true
          components: rustfmt

      - uses: actions-rs/cargo@v1
        name: Run cargo clippy (fix)
        with:
          command: clippy
          args: --fix

      - uses: actions-rs/cargo@v1
        name: Run cargo clippy
        with:
          command: clippy
          args: --all --all-targets --all-features -- -D warnings

      - uses: actions-js/push@master
        name: Push changes
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.head_ref }}
          message: "Lint Rust code"
          coauthor_email: ${{ github.event.pull_request.user.login }}@users.noreply.github.com
          coauthor_name: ${{ github.event.pull_request.user.login }}
